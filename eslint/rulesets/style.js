import stylistic from '@stylistic/eslint-plugin';

export default {
  name: 'amorra/style',

  plugins: {
    '@stylistic': stylistic,
  },

  rules: {
    '@stylistic/array-bracket-newline': [ 'warn', 'consistent' ],
    '@stylistic/array-bracket-spacing': [ 'warn', 'always' ],
    '@stylistic/array-element-newline': [ 'warn', 'consistent' ],
    '@stylistic/arrow-parens': [ 'error', 'always' ],
    '@stylistic/arrow-spacing': [ 'error', { before: true, after: true } ],
    '@stylistic/block-spacing': [ 'error', 'always' ],
    '@stylistic/brace-style': [ 'error', '1tbs', { allowSingleLine: true } ],
    '@stylistic/comma-dangle': [ 'error', {
      arrays: 'always-multiline',
      objects: 'always-multiline',
      imports: 'always-multiline',
      exports: 'always-multiline',
      functions: 'never',
    } ],
    '@stylistic/comma-spacing': [ 'error', { before: false, after: true } ],
    '@stylistic/comma-style': [ 'error', 'last' ],
    '@stylistic/computed-property-spacing': [ 'error', 'never', { enforceForClassMembers: true } ],
    '@stylistic/curly-newline': [ 'error', { multiline: true, minElements: 3, consistent: true } ],
    '@stylistic/dot-location': [ 'error', 'property' ],
    '@stylistic/eol-last': [ 'error', 'always' ],
    '@stylistic/function-call-argument-newline': [ 'error', 'consistent' ],
    '@stylistic/function-call-spacing': [ 'error', 'never' ],
    '@stylistic/function-paren-newline': [ 'error', 'consistent' ],
    '@stylistic/generator-star-spacing': [ 'error', { before: false, after: true } ],
    '@stylistic/implicit-arrow-linebreak': 'off',
    '@stylistic/indent': [ 'error', 2, {
      SwitchCase: 1,
      VariableDeclarator: 1,
      outerIIFEBody: 1,
      MemberExpression: 1,
      FunctionDeclaration: { parameters: 1, body: 1 },
      FunctionExpression: { parameters: 1, body: 1 },
      CallExpression: { arguments: 1 },
      ArrayExpression: 1,
      ObjectExpression: 1,
      ImportDeclaration: 1,
      flatTernaryExpressions: false,
      ignoreComments: false,
      ignoredNodes: [ 'TemplateLiteral *', 'JSXElement', 'JSXElement > *', 'JSXAttribute', 'JSXIdentifier', 'JSXNamespacedName', 'JSXMemberExpression', 'JSXSpreadAttribute', 'JSXExpressionContainer', 'JSXOpeningElement', 'JSXClosingElement', 'JSXFragment', 'JSXOpeningFragment', 'JSXClosingFragment', 'JSXText', 'JSXEmptyExpression', 'JSXSpreadChild' ],
      offsetTernaryExpressions: true,
    } ],
    '@stylistic/indent-binary-ops': [ 'error', 2 ],
    '@stylistic/key-spacing': [ 'error', {
      singleLine: {
        beforeColon: false,
        afterColon: true,
      },
      multiLine: {
        mode: 'minimum',
        beforeColon: false,
        afterColon: true,
      },
    } ],
    '@stylistic/keyword-spacing': [ 'error', {
      before: true,
      after: true,
      overrides: {
        return: { after: true },
        throw: { after: true },
        case: { after: true },
      },
    } ],
    '@stylistic/line-comment-position': 'off',
    '@stylistic/linebreak-style': [ 'error', 'unix' ],
    '@stylistic/lines-between-class-members': [ 'error', 'always', { exceptAfterSingleLine: false } ],
    '@stylistic/max-len': 'off',
    '@stylistic/max-statements-per-line': 'off',
    '@stylistic/member-delimiter-style': [ 'warn', {
      // typescript
      multiline: {
        delimiter: 'semi',
        requireLast: true,
      },
      singleline: {
        delimiter: 'semi',
        requireLast: false,
      },
      multilineDetection: 'brackets',
    } ],
    '@stylistic/multiline-comment-style': [ 'off', 'starred-block' ],
    '@stylistic/multiline-ternary': [ 'error', 'always-multiline' ],
    '@stylistic/new-parens': 'error',
    '@stylistic/newline-per-chained-call': [ 'warn', {
      ignoreChainWithDepth: 3,
    } ],
    '@stylistic/no-confusing-arrow': [ 'error', {
      allowParens: true,
    } ],
    '@stylistic/no-extra-parens': [ 'warn', 'functions' ],
    '@stylistic/no-extra-semi': 'error',
    '@stylistic/no-floating-decimal': 'error',
    '@stylistic/no-mixed-operators': [ 'error', {
      groups: [
        [ '+', '-', '*', '/', '%', '**' ],
        [ '&', '|', '^', '~', '<<', '>>', '>>>' ],
        [ '==', '!=', '===', '!==', '>', '>=', '<', '<=' ],
        // ['&&', '||'],
        [ 'in', 'instanceof' ],
      ],
      allowSamePrecedence: true,
    } ],
    '@stylistic/no-mixed-spaces-and-tabs': 'warn',
    '@stylistic/no-multi-spaces': 'off',
    '@stylistic/no-multiple-empty-lines': [ 'error', { max: 1, maxBOF: 0, maxEOF: 0 } ],
    '@stylistic/no-tabs': 'warn',
    '@stylistic/no-trailing-spaces': 'error',
    '@stylistic/no-whitespace-before-property': 'error',
    '@stylistic/nonblock-statement-body-position': [ 'error', 'beside' ],
    '@stylistic/object-curly-newline': [ 'warn', { multiline: true, consistent: true } ],
    '@stylistic/object-curly-spacing': [ 'warn', 'always' ],
    '@stylistic/object-property-newline': [ 'error', { allowMultiplePropertiesPerLine: true } ],
    '@stylistic/operator-linebreak': [ 'error', 'before', { overrides: { '?': 'before', ':': 'before', '|>': 'before' } } ],
    '@stylistic/padded-blocks': [ 'error', { blocks: 'never', switches: 'never', classes: 'never' } ],
    '@stylistic/quote-props': [ 'error', 'as-needed' ],
    '@stylistic/quotes': [ 'error', 'single', { avoidEscape: true, allowTemplateLiterals: false } ],
    '@stylistic/rest-spread-spacing': [ 'error', 'never' ],
    '@stylistic/semi': [ 'error', 'always' ],
    '@stylistic/semi-spacing': [ 'error', { before: false, after: true } ],
    '@stylistic/space-before-blocks': [ 'error', 'always' ],
    '@stylistic/space-before-function-paren': [ 'error', 'always' ],
    '@stylistic/space-in-parens': [ 'error', 'never' ],
    '@stylistic/space-infix-ops': 'error',
    '@stylistic/space-unary-ops': [ 'error', { words: true, nonwords: false } ],
    '@stylistic/spaced-comment': [ 'error', 'always', {
      line: { markers: [ '*package', '!', '/', ',', '=' ] },
      block: { balanced: true, markers: [ '*package', '!', ',', ':', '::', 'flow-include' ], exceptions: [ '*' ] },
    } ],
    '@stylistic/template-curly-spacing': [ 'error', 'never' ],
    '@stylistic/template-tag-spacing': [ 'error', 'never' ],
    '@stylistic/type-annotation-spacing': [ 'warn', { before: false, after: true } ],
    '@stylistic/type-generic-spacing': [ 'warn' ],
    '@stylistic/type-named-tuple-spacing': [ 'warn' ],
    '@stylistic/wrap-iife': [ 'error', 'any', { functionPrototypeMethods: true } ],
    '@stylistic/wrap-regex': 'off',
    '@stylistic/yield-star-spacing': [ 'error', 'after' ],

    'prefer-destructuring': [ 'off',
      {
        VariableDeclarator: {
          array: false,
          object: true,
        },
        AssignmentExpression: {
          array: true,
          object: false,
        },
      },
      {
        enforceForRenamedProperties: false,
      } ],

    'import/order': [ 'warn', {
      groups: [ [ 'builtin', 'external' ], 'internal', [ 'parent', 'sibling', 'index' ], 'unknown' ],
      'newlines-between': 'always',
      alphabetize: {
        order: 'asc',
        caseInsensitive: true,
      },
      pathGroups: [
        {
          pattern: 'react',
          group: 'builtin',
          position: 'before',
        },
      ],
      pathGroupsExcludedImportTypes: [],
    } ],
  },
};
